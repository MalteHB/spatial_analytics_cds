canopy_neighborhoods <- raster::extract(canopy, neighborhoods_sp, fun = mean)
# Add the mean canopy values to neighborhoods
neighborhoods_avg_canopy <- ___(neighborhoods, avg_canopy = ___)
# Add the mean canopy values to neighborhoods
neighborhoods_avg_canopy <- mutate(neighborhoods, avg_canopy = canopy_neighborhoods)
# Load the ggplot2 package
pacman::p_load(ggplot2)
# Create a histogram of tree density (tree_density)
ggplot(neighborhoods_avg_canopy, aes(x = tree_density)) +
geom_histogram(color = "white")
neighborhoods_avg_canopy
neighborhoods
# Add the mean canopy values to neighborhoods
neighborhoods_avg_canopy <- mutate(neighborhoods_counts, avg_canopy = canopy_neighborhoods)
# Create a histogram of tree density (tree_density)
ggplot(neighborhoods_avg_canopy, aes(x = tree_density)) +
geom_histogram(color = "white")
# Create a histogram of average canopy (avg_canopy)
ggplot(neighborhoods_avg_canopy, aes(x = avg_canopy)) +
geom_histogram(color = "white")
# Create a scatter plot of tree_density vs avg_canopy
ggplot(neighborhoods, aes(x = tree_density, y = avg_canopy)) +
geom_point() +
stat_smooth()
# Create a scatter plot of tree_density vs avg_canopy
ggplot(neighborhoods_counts, aes(x = tree_density, y = avg_canopy)) +
geom_point() +
stat_smooth()
neighborhoods_counts
# Create a scatter plot of tree_density vs avg_canopy
ggplot(neighborhoods_avg_canopy, aes(x = tree_density, y = avg_canopy)) +
geom_point() +
stat_smooth()
# Compute the correlation between density and canopy
cor(neighborhoods$tree_density, neighborhoods$avg_canopy)
# Compute the correlation between density and canopy
cor(neighborhoods_avg_canopy$tree_density, neighborhoods_avg_canopy$avg_canopy)
canopy
plot(canopy)
# Simplify name
neighborhoods <- neighborhoods_avg_canopy
# Simplify name
neighborhoods <- neighborhoods_avg_canopy
# Plot the tree density with default colors
ggplot(neighborhoods) +
geom_sf(aes(fill = tree_density))
# Plot the tree canopy with default colors
ggplot(neighborhoods) +
geom_sf(aes(fill = avg_canopy))
# Plot the tree density using scale_fill_gradient()
ggplot(neighborhoods) +
geom_sf(aes(fill = tree_density)) +
scale_fill_gradient(low = "#edf8e9", high = "#005a32")
# Plot the tree canopy using the scale_fill_gradient()
ggplot(neighborhoods) +
geom_sf(aes(fill = avg_canopy)) +
scale_fill_gradient(low = "#edf8e9", high = "#005a32")
# Load tmap library
pacman::p_load(tmap)
# Create a simple map of neighborhoods
tm_shape(neighborhoods) +
tm_polygons()
# Create a color-coded map of neighborhood tree density
tm_shape(neighborhoods) +
tm_polygons(color = neighborhoods$tree_density)
# Create a color-coded map of neighborhood tree density
tm_shape(neighborhoods) +
tm_polygons("tree_density")
# Style the tree density map
tm_shape(neighborhoods) +
tm_polygons("tree_density", palette = "Greens",
style = "quantile", n = 7,
title = "Trees per sq. KM")
# Create a similar map of average tree canopy
tm_shape(neighborhoods) +
tm_polygons("avg_canopy", palette = "Greens",
style = "quantile", n = 7,
title = "Average tree canopy (%)")
# Style the tree density map
tm_shape(neighborhoods) +
tm_polygons("tree_density", palette = "Greens",
style = "quantile", n = 7,
title = "Trees per sq. KM")
# Create a similar map of average tree canopy
tm_shape(neighborhoods) +
tm_polygons("avg_canopy", palette = "Greens",
style = "quantile", n = 7,
title = "Average tree canopy (%)")
# Create a similar map of average tree canopy
tm_shape(neighborhoods) +
tm_polygons("avg_canopy", palette = "Greens",
style = "quantile", n = 7,
title = "Average tree canopy (%)")
neighborhoods
library(knitr)
library(rmdformats)
## Global options
options(max.print="75")
opts_chunk$set(echo=TRUE,
cache=TRUE,
prompt=FALSE,
tidy=TRUE,
comment=NA,
message=FALSE,
warning=FALSE)
opts_knit$set(width=75)
# Your code goes below
# Create a similar map of average tree canopy
tm_shape(neighborhoods) +
tm_polygons("avg_canopy", palette = "Greens",
style = "quantile", n = 7,
title = "Average tree canopy (%)")
# Create a similar map of average tree canopy
tm_shape(neighborhoods) +
tm_polygons("avg_canopy", palette = "Greens",
style = "quantile", n = 17,
title = "Average tree canopy (%)")
# Style the tree density map
tm_shape(neighborhoods) +
tm_polygons("tree_density", palette = "Greens",
style = "quantile", n = 7,
title = "Trees per sq. KM")
View(neighborhoods)
# Load tmap library
pacman::p_load(tmap)
# Create a simple map of neighborhoods
tm_shape(neighborhoods) +
tm_polygons()
# Create a color-coded map of neighborhood tree density
tm_shape(neighborhoods) +
tm_polygons("tree_density")
# Style the tree density map
tm_shape(neighborhoods) +
tm_polygons("tree_density", palette = "Greens",
style = "quantile", n = 7,
title = "Trees per sq. KM")
# Create a similar map of average tree canopy
tm_shape(neighborhoods) +
tm_polygons("avg_canopy", palette = "Greens",
style = "quantile", n = 7,
title = "Average tree canopy (%)")
# Load data and libraries
pacman::p_load(sf, raster, dplyr)
# Read in the trees shapefile
trees <- st_read("../../Week02/data/trees.shp")
# Read in the neighborhood shapefile
neighborhoods <- st_read("../../Week02/data/neighborhoods.shp")
# Read in the tree canopy single-band raster
canopy <- raster("../../Week02/data/canopy.tif")
# Read in the manhattan Landsat image multi-band raster
manhattan <- brick("../../Week02/data/manhattan.tif")
# Compute the counts of all trees by hood
tree_counts <- count(trees, nta)
# Take a quick look
plot(tree_counts)
# Remove the geometry
tree_counts_no_geom <- st_drop_geometry(tree_counts)
# Rename the n variable to tree_cnt
tree_counts_renamed <- rename(tree_counts_no_geom, tree_cnt = n)
# Create histograms of the total counts
hist(tree_counts_renamed$tree_cnt)
# Compute areas and unclass
areas <- unclass(st_area(neighborhoods))
# Add the areas to the neighborhoods object
neighborhoods_area <- mutate(neighborhoods, area = areas)
# Join neighborhoods and counts by shared columns (find the matching one in neighborhoods)
neighborhoods_counts <- left_join(neighborhoods_area,
tree_counts_renamed, by = c("ntacode" = "nta"))
# Replace NA values with 0 (lookup ifelse() function if needed)
neighborhoods_counts <- mutate(neighborhoods_counts,
tree_cnt = ifelse(is.na(tree_cnt),
0, tree_cnt))
# Compute the density
neighborhoods_counts <- mutate(neighborhoods_counts,
tree_density = tree_cnt/area)
# Confirm that you have the neighborhood density results
head(neighborhoods_counts)
# Transform the neighborhoods CRS to match the canopy layer
neighborhoods_crs <- st_transform(neighborhoods_counts, crs = crs(canopy, asText = TRUE))
# Convert neighborhoods object to a Spatial object (optional)
neighborhoods_sp <- as(neighborhoods_crs, "Spatial")
# Compute the mean of canopy values by neighborhood
canopy_neighborhoods <- raster::extract(canopy, neighborhoods_sp, fun = mean)
# Add the mean canopy values to neighborhoods
neighborhoods_avg_canopy <- mutate(neighborhoods_counts, avg_canopy = canopy_neighborhoods)
# Load the ggplot2 package
pacman::p_load(ggplot2)
# Create a histogram of tree density (tree_density)
ggplot(neighborhoods_avg_canopy, aes(x = tree_density)) +
geom_histogram(color = "white")
# Create a histogram of average canopy (avg_canopy)
ggplot(neighborhoods_avg_canopy, aes(x = avg_canopy)) +
geom_histogram(color = "white")
# Create a scatter plot of tree_density vs avg_canopy
ggplot(neighborhoods_avg_canopy, aes(x = tree_density, y = avg_canopy)) +
geom_point() +
stat_smooth()
# Compute the correlation between density and canopy
cor(neighborhoods_avg_canopy$tree_density, neighborhoods_avg_canopy$avg_canopy)
# Simplify name
neighborhoods <- neighborhoods_avg_canopy
# Plot the tree density with default colors
ggplot(neighborhoods) +
geom_sf(aes(fill = tree_density))
# Plot the tree canopy with default colors
ggplot(neighborhoods) +
geom_sf(aes(fill = avg_canopy))
# Plot the tree density using scale_fill_gradient()
ggplot(neighborhoods) +
geom_sf(aes(fill = tree_density)) +
scale_fill_gradient(low = "#edf8e9", high = "#005a32")
# Plot the tree canopy using the scale_fill_gradient()
ggplot(neighborhoods) +
geom_sf(aes(fill = avg_canopy)) +
scale_fill_gradient(low = "#edf8e9", high = "#005a32")
# Create a map of the manhattan aerial photo
tm_shape(manhattan) +
tm_raster()
# Create a map of the neighborhood polygons
tm_shape(neighborhoods) +
tm_borders(col = "black", lwd = 0.5, alpha = 0.5)
# Create a map of the manhattan aerial photo
manmap <- tm_shape(manhattan) +
tm_raster()
# Create a map of the neighborhood polygons
neighmap <- tm_shape(neighborhoods) +
tm_borders(col = "black", lwd = 0.5, alpha = 0.5)
# Your code goes below
map1 <- manmap+neighmap
# Create a similar map of average tree canopy
tm_shape(neighborhoods) +
tm_polygons("avg_canopy", palette = "Greens",
style = "quantile", n = 70,
title = "Average tree canopy (%)")
# Create a similar map of average tree canopy
tm_shape(neighborhoods) +
tm_polygons("avg_canopy",
style = "quantile", n = 7,
title = "Average tree canopy (%)")
tm_shape(neighborhoods) +
tm_polygons("avg_canopy")
avg_canopymap <- tm_shape(neighborhoods) +
tm_polygons("avg_canopy", palette = "Greens",
style = "quantile", n = 7,
title = "Average tree canopy (%)")
tmap_arrange(map1, avg_canopymap)
tmap_arrange(map1, avg_canopymap, asp = NA)
neighborhoods
neighborhoods$avg_canopy1 <- as.numeric(neighborhoods$avg_canopy)
# Create a similar map of average tree canopy
tm_shape(neighborhoods) +
tm_polygons("avg_canopy1", palette = "Greens",
style = "quantile", n = 7,
title = "Average tree canopy (%)")
# Create a map of the manhattan aerial photo
manmap <- tm_shape(manhattan) +
tm_raster()
# Create a map of the neighborhood polygons
neighmap <- tm_shape(neighborhoods) +
tm_borders(col = "black", lwd = 0.5, alpha = 0.5)
# Your code goes below
map1 <- manmap+neighmap
avg_canopymap <- tm_shape(neighborhoods) +
tm_polygons("avg_canopy", palette = "Greens",
style = "quantile", n = 7,
title = "Average tree canopy (%)")
tmap_arrange(map1, avg_canopymap, asp = NA)
neighborhoods$avg_canopy <- as.numeric(neighborhoods$avg_canopy) # Changing average canopy to numeric
# Create a similar map of average tree canopy
tm_shape(neighborhoods) +
tm_polygons("avg_canopy1", palette = "Greens",
style = "quantile", n = 7,
title = "Average tree canopy (%)")
# Create a similar map of average tree canopy
tm_shape(neighborhoods) +
tm_polygons("avg_canopy", palette = "Greens",
style = "quantile", n = 7,
title = "Average tree canopy (%)")
# Your code goes below
map1 <- manmap+neighmap
avg_canopymap <- tm_shape(neighborhoods) +
tm_polygons("avg_canopy", palette = "Greens",
style = "quantile", n = 7,
title = "Average tree canopy (%)")
tmap_arrange(map1, avg_canopymap, asp = NA)
avg_canopymap <- tm_shape(neighborhoods) +
tm_polygons("avg_canopy", palette = "Greens",
style = "quantile", n = 7,
title = "Average tree canopy (%)") +
tmap_arrange(map1, asp = NA)
avg_canopymap
map1
# Create a map of the manhattan aerial photo
manmap <- tm_shape(manhattan) +
tm_raster()
manmap
# Create a map of the neighborhood polygons
neighmap <- tm_shape(neighborhoods) +
tm_borders(col = "black", lwd = 0.5, alpha = 0.5)
neighmap
library(knitr)
library(rmdformats)
## Global options
options(max.print="75")
opts_chunk$set(echo=TRUE,
cache=TRUE,
prompt=FALSE,
tidy=TRUE,
comment=NA,
message=FALSE,
warning=FALSE)
opts_knit$set(width=75)
# Your code goes below
map1 <- manmap+neighmap
library(knitr)
library(rmdformats)
## Global options
options(max.print="75")
opts_chunk$set(echo=TRUE,
cache=TRUE,
prompt=FALSE,
tidy=TRUE,
comment=NA,
message=FALSE,
warning=FALSE)
opts_knit$set(width=75)
# Load data and libraries
pacman::p_load(sf, raster, dplyr)
# Read in the trees shapefile
trees <- st_read("../../Week02/data/trees.shp")
# Read in the neighborhood shapefile
neighborhoods <- st_read("../../Week02/data/neighborhoods.shp")
# Read in the tree canopy single-band raster
canopy <- raster("../../Week02/data/canopy.tif")
# Read in the manhattan Landsat image multi-band raster
manhattan <- brick("../../Week02/data/manhattan.tif")
# Compute the counts of all trees by hood
tree_counts <- count(trees, nta)
# Take a quick look
plot(tree_counts)
# Remove the geometry
tree_counts_no_geom <- st_drop_geometry(tree_counts)
# Rename the n variable to tree_cnt
tree_counts_renamed <- rename(tree_counts_no_geom, tree_cnt = n)
# Create histograms of the total counts
hist(tree_counts_renamed$tree_cnt)
# Compute areas and unclass
areas <- unclass(st_area(neighborhoods))
# Add the areas to the neighborhoods object
neighborhoods_area <- mutate(neighborhoods, area = areas)
# Join neighborhoods and counts by shared columns (find the matching one in neighborhoods)
neighborhoods_counts <- left_join(neighborhoods_area,
tree_counts_renamed, by = c("ntacode" = "nta"))
# Replace NA values with 0 (lookup ifelse() function if needed)
neighborhoods_counts <- mutate(neighborhoods_counts,
tree_cnt = ifelse(is.na(tree_cnt),
0, tree_cnt))
# Compute the density
neighborhoods_counts <- mutate(neighborhoods_counts,
tree_density = tree_cnt/area)
# Confirm that you have the neighborhood density results
head(neighborhoods_counts)
# Transform the neighborhoods CRS to match the canopy layer
neighborhoods_crs <- st_transform(neighborhoods_counts, crs = crs(canopy, asText = TRUE))
# Convert neighborhoods object to a Spatial object (optional)
neighborhoods_sp <- as(neighborhoods_crs, "Spatial")
# Compute the mean of canopy values by neighborhood
canopy_neighborhoods <- raster::extract(canopy, neighborhoods_sp, fun = mean)
# Add the mean canopy values to neighborhoods
neighborhoods_avg_canopy <- mutate(neighborhoods_counts, avg_canopy = canopy_neighborhoods)
# Load the ggplot2 package
pacman::p_load(ggplot2)
# Create a histogram of tree density (tree_density)
ggplot(neighborhoods_avg_canopy, aes(x = tree_density)) +
geom_histogram(color = "white")
# Create a histogram of average canopy (avg_canopy)
ggplot(neighborhoods_avg_canopy, aes(x = avg_canopy)) +
geom_histogram(color = "white")
# Create a scatter plot of tree_density vs avg_canopy
ggplot(neighborhoods_avg_canopy, aes(x = tree_density, y = avg_canopy)) +
geom_point() +
stat_smooth()
# Compute the correlation between density and canopy
cor(neighborhoods_avg_canopy$tree_density, neighborhoods_avg_canopy$avg_canopy)
# Simplify name
neighborhoods <- neighborhoods_avg_canopy
# Plot the tree density with default colors
ggplot(neighborhoods) +
geom_sf(aes(fill = tree_density))
# Plot the tree canopy with default colors
ggplot(neighborhoods) +
geom_sf(aes(fill = avg_canopy))
# Plot the tree density using scale_fill_gradient()
ggplot(neighborhoods) +
geom_sf(aes(fill = tree_density)) +
scale_fill_gradient(low = "#edf8e9", high = "#005a32")
# Plot the tree canopy using the scale_fill_gradient()
ggplot(neighborhoods) +
geom_sf(aes(fill = avg_canopy)) +
scale_fill_gradient(low = "#edf8e9", high = "#005a32")
# Load tmap library
pacman::p_load(tmap)
# Create a simple map of neighborhoods
tm_shape(neighborhoods) +
tm_polygons()
# Create a color-coded map of neighborhood tree density
tm_shape(neighborhoods) +
tm_polygons("tree_density")
# Style the tree density map
tm_shape(neighborhoods) +
tm_polygons("tree_density", palette = "Greens",
style = "quantile", n = 7,
title = "Trees per sq. KM")
neighborhoods$avg_canopy <- as.numeric(neighborhoods$avg_canopy) # Changing average canopy to numeric
# Create a similar map of average tree canopy
tm_shape(neighborhoods) +
tm_polygons("avg_canopy", palette = "Greens",
style = "quantile", n = 7,
title = "Average tree canopy (%)")
?tm_raster
# Read in the manhattan Landsat image multi-band raster
manhattan <- raster("../../Week02/data/manhattan.tif")
# Create a map of the manhattan aerial photo
manmap <- tm_shape(manhattan) +
tm_raster()
manmap
# Read in the manhattan Landsat image multi-band raster
manhattan <- brick("../../Week02/data/manhattan.tif")
plotRGB(manmap)
plot(manmap)
# Create a map of the manhattan aerial photo
manmap <- tm_shape(manhattan) +
tm_rgb()
manmap
# Your code goes below
map1 <- manmap+neighmap
# Create a map of the neighborhood polygons
neighmap <- tm_shape(neighborhoods) +
tm_borders(col = "black", lwd = 0.5, alpha = 0.5)
neighmap
# Your code goes below
map1 <- manmap+neighmap
avg_canopymap <- tm_shape(neighborhoods) +
tm_polygons("avg_canopy", palette = "Greens",
style = "quantile", n = 7,
title = "Average tree canopy (%)") +
tmap_arrange(map1, asp = NA)
avg_canopymap
avg_canopymap
tmap_arrange(map1, avg_canopymap, asp = NA)
avg_canopymap <- tm_shape(neighborhoods) +
tm_polygons("avg_canopy", palette = "Greens",
style = "quantile", n = 7) +
tmap_arrange(map1, asp = NA)
tmap_arrange(map1, avg_canopymap, asp = NA)
avg_canopymap <- tm_shape(neighborhoods) +
tm_polygons("avg_canopy", palette = "Greens",
style = "quantile", n = 7)
tmap_arrange(map1, avg_canopymap, asp = NA)
# Load the ggplot2 package
pacman::p_load(ggplot2)
# Create a histogram of tree density (tree_density)
ggplot(neighborhoods_avg_canopy, aes(x = tree_density)) +
geom_histogram(color = "white")
# Create a histogram of average canopy (avg_canopy)
ggplot(neighborhoods_avg_canopy, aes(x = avg_canopy)) +
geom_histogram(color = "white")
# Create a scatter plot of tree_density vs avg_canopy
ggplot(neighborhoods_avg_canopy, aes(x = tree_density, y = avg_canopy)) +
geom_point() +
stat_smooth()
# Compute the correlation between density and canopy
cor(neighborhoods_avg_canopy$tree_density, neighborhoods_avg_canopy$avg_canopy)
# Your code goes below
map1 <- manmap+neighmap
tree_densitymap <- tm_shape(neighborhoods) +
tm_polygons("tree_density", palette = "Greens",
style = "quantile", n = 7,
title = "Trees per sq. KM")
avg_canopymap <- tm_shape(neighborhoods) +
tm_polygons("avg_canopy", palette = "Greens",
style = "quantile", n = 7,
title = "Average tree canopy (%)") +
tmap_arrange(map1, asp = NA)
tmap_arrange(map1, avg_canopymap, asp = NA)
tmap_arrange(map1, tree_densitymap, avg_canopymap, asp = NA)
?tm_legend
# Your code goes below
map1 <- manmap+neighmap
tree_densitymap <- tm_shape(neighborhoods) +
tm_polygons("tree_density", palette = "Greens",
style = "quantile", n = 7,
title = "Trees per sq. KM") +
tm_legend(legend.show = FALSE)
avg_canopymap <- tm_shape(neighborhoods) +
tm_polygons("avg_canopy", palette = "Greens",
style = "quantile", n = 7,
title = "Average tree canopy (%)") +
tm_legend(legend.show = FALSE)
tmap_arrange(map1, tree_densitymap, avg_canopymap, asp = NA)
# Your code goes below
map1 <- manmap+neighmap
tree_densitymap <- tm_shape(neighborhoods) +
tm_polygons("tree_density", palette = "Greens",
style = "quantile", n = 7,
title = "Trees per sq. KM")
avg_canopymap <- tm_shape(neighborhoods) +
tm_polygons("avg_canopy", palette = "Greens",
style = "quantile", n = 7,
title = "Average tree canopy (%)")
tmap_arrange(map1, tree_densitymap, avg_canopymap, asp = NA)
tmap_arrange(tree_densitymap, map1, avg_canopymap, asp = NA)  # Arranging the three maps beside each other with the aerial view in the middle.
